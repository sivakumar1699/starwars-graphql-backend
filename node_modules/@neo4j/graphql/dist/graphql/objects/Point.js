"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Point = void 0;
const graphql_1 = require("graphql");
const numerical_1 = require("../../schema/resolvers/field/numerical");
const srid_to_crs_1 = require("./utils/srid-to-crs");
exports.Point = new graphql_1.GraphQLObjectType({
    name: "Point",
    description: "A point in a coordinate system. For more information, see https://neo4j.com/docs/graphql/4/type-definitions/types/spatial/#point",
    fields: {
        longitude: {
            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLFloat),
            resolve: (source) => source.longitude || source.x,
        },
        latitude: {
            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLFloat),
            resolve: (source) => source.latitude || source.y,
        },
        height: {
            type: graphql_1.GraphQLFloat,
            resolve: (source) => source.height || source.z,
        },
        crs: {
            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString),
            resolve: (source) => (0, srid_to_crs_1.sridToCrs)(source.srid),
        },
        srid: {
            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt),
            resolve: numerical_1.numericalResolver,
        },
    },
});
//# sourceMappingURL=Point.js.map