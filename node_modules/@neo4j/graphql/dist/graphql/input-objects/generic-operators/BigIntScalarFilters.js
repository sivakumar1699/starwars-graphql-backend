"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BigIntListFilters = exports.BigIntScalarFilters = void 0;
const graphql_1 = require("graphql");
const scalars_1 = require("../../scalars");
exports.BigIntScalarFilters = new graphql_1.GraphQLInputObjectType({
    name: "BigIntScalarFilters",
    description: "BigInt filters",
    fields: {
        eq: {
            type: scalars_1.GraphQLBigInt,
        },
        gt: { type: scalars_1.GraphQLBigInt },
        gte: { type: scalars_1.GraphQLBigInt },
        in: { type: new graphql_1.GraphQLList(new graphql_1.GraphQLNonNull(scalars_1.GraphQLBigInt)) },
        lt: { type: scalars_1.GraphQLBigInt },
        lte: { type: scalars_1.GraphQLBigInt },
    },
});
exports.BigIntListFilters = new graphql_1.GraphQLInputObjectType({
    name: "BigIntListFilters",
    description: "BigInt list filters",
    fields: {
        eq: { type: new graphql_1.GraphQLList(new graphql_1.GraphQLNonNull(scalars_1.GraphQLBigInt)) },
        includes: { type: scalars_1.GraphQLBigInt },
    },
});
//# sourceMappingURL=BigIntScalarFilters.js.map