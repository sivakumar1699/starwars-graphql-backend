"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNode = createNode;
exports.getEntityLabels = getEntityLabels;
exports.createRelationship = createRelationship;
const cypher_builder_1 = __importDefault(require("@neo4j/cypher-builder"));
const ConcreteEntityAdapter_1 = require("../../../schema-model/entity/model-adapters/ConcreteEntityAdapter");
const map_labels_with_context_1 = require("../../../schema-model/utils/map-labels-with-context");
function createNode(name) {
    if (name) {
        return new cypher_builder_1.default.NamedNode(name);
    }
    return new cypher_builder_1.default.Node();
}
function getEntityLabels(entity, neo4jGraphQLContext) {
    const nodeLabels = entity instanceof ConcreteEntityAdapter_1.ConcreteEntityAdapter ? entity.getLabels() : [entity.name];
    return neo4jGraphQLContext ? (0, map_labels_with_context_1.mapLabelsWithContext)(nodeLabels, neo4jGraphQLContext) : nodeLabels;
}
function createRelationship(name) {
    if (name) {
        return new cypher_builder_1.default.NamedRelationship(name);
    }
    return new cypher_builder_1.default.Relationship();
}
//# sourceMappingURL=create-node-from-entity.js.map