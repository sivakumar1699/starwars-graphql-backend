import type { EntityAdapter } from "../../../../schema-model/entity/EntityAdapter";
import type { Neo4jGraphQLTranslationContext } from "../../../../types/neo4j-graphql-translation-context";
export declare const UNSUPPORTED_REASON_SUBSCRIPTION = "Unwind create optimization does not yet support subscriptions";
export declare const UNSUPPORTED_REASON_ABSTRACT_TYPES = "Abstract types are not yet supported";
export declare const UNSUPPORTED_REASON_POPULATED_BY = "Annotation: populatedBy is not yet supported";
export declare const UNSUPPORTED_REASON_CONNECT = "Operation: connect is not yet supported";
type UnwindCreateSupported = {
    isSupported: boolean;
    reason: string;
};
export declare function isUnwindCreateSupported(entityAdapter: EntityAdapter, createArgs: Record<string, any>[], context: Neo4jGraphQLTranslationContext): UnwindCreateSupported;
export {};
//# sourceMappingURL=is-unwind-create-supported.d.ts.map