import type { ResolveTree } from "graphql-parse-resolve-info";
import type { ConcreteEntityAdapter } from "../../../../schema-model/entity/model-adapters/ConcreteEntityAdapter";
import type { Neo4jGraphQLTranslationContext } from "../../../../types/neo4j-graphql-translation-context";
import { VectorOperation } from "../../ast/operations/VectorOperation";
import { VectorSelection } from "../../ast/selection/VectorSelection";
import type { QueryASTFactory } from "../QueryASTFactory";
export declare class VectorFactory {
    private queryASTFactory;
    constructor(queryASTFactory: QueryASTFactory);
    createVectorOperation(entity: ConcreteEntityAdapter, resolveTree: ResolveTree, context: Neo4jGraphQLTranslationContext): VectorOperation;
    private addVectorScoreFilter;
    getVectorSelection(entity: ConcreteEntityAdapter, context: Neo4jGraphQLTranslationContext): VectorSelection;
    private getVectorOptions;
}
//# sourceMappingURL=VectorFactory.d.ts.map