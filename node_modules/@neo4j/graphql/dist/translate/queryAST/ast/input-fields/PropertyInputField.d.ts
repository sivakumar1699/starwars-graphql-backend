import Cypher from "@neo4j/cypher-builder";
import type { AttributeAdapter } from "../../../../schema-model/attribute/model-adapters/AttributeAdapter";
import type { QueryASTContext } from "../QueryASTContext";
import { InputField } from "./InputField";
export declare class PropertyInputField extends InputField {
    private attribute;
    constructor({ attribute, attachedTo }: {
        attribute: AttributeAdapter;
        attachedTo: "node" | "relationship";
    });
    getChildren(): never[];
    print(): string;
    getSetParams(queryASTContext: QueryASTContext<Cypher.Node>, inputVariable?: Cypher.Variable): Cypher.SetParam[];
    private getVariablePath;
    private coerceReference;
    getSetClause(): Cypher.Clause[];
}
//# sourceMappingURL=PropertyInputField.d.ts.map