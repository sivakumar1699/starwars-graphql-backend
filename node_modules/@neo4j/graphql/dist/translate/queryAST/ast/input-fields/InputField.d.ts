import type Cypher from "@neo4j/cypher-builder";
import type { QueryASTContext } from "../QueryASTContext";
import { QueryASTNode } from "../QueryASTNode";
export declare abstract class InputField extends QueryASTNode {
    name: string;
    attachedTo: "node" | "relationship";
    constructor(name: string, attachedTo?: "node" | "relationship");
    print(): string;
    protected getTarget(queryASTContext: QueryASTContext<Cypher.Node>): Cypher.Node | Cypher.Relationship;
    abstract getSetParams(_queryASTContext: QueryASTContext, inputVariable?: Cypher.Variable): Cypher.SetParam[];
}
//# sourceMappingURL=InputField.d.ts.map