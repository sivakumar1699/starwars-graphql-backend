"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDurationOperation = createDurationOperation;
const cypher_builder_1 = __importDefault(require("@neo4j/cypher-builder"));
const create_comparison_operator_1 = require("../../../utils/create-comparison-operator");
function createDurationOperation({ operator, property, param, }) {
    // NOTE: When we simply compare values, we don't need to prepend Cypher.datetime()
    if (operator === "EQ") {
        return cypher_builder_1.default.eq(property, param);
    }
    const variable = cypher_builder_1.default.plus(cypher_builder_1.default.datetime(), param);
    const propertyRef = cypher_builder_1.default.plus(cypher_builder_1.default.datetime(), property);
    return (0, create_comparison_operator_1.createComparisonOperation)({ operator, property: propertyRef, param: variable });
}
//# sourceMappingURL=create-duration-operation.js.map