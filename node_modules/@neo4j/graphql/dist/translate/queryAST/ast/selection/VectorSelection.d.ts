import Cypher from "@neo4j/cypher-builder";
import type { ConcreteEntityAdapter } from "../../../../schema-model/entity/model-adapters/ConcreteEntityAdapter";
import type { Neo4jVectorSettings } from "../../../../types";
import { QueryASTContext } from "../QueryASTContext";
import type { VectorOptions } from "../operations/VectorOperation";
import { EntitySelection, type SelectionClause } from "./EntitySelection";
export declare class VectorSelection extends EntitySelection {
    private target;
    private vectorOptions;
    private scoreVariable;
    private settings?;
    constructor({ target, vectorOptions, scoreVariable, settings, }: {
        target: ConcreteEntityAdapter;
        vectorOptions: VectorOptions;
        scoreVariable: Cypher.Variable;
        settings?: Neo4jVectorSettings;
    });
    apply(context: QueryASTContext): {
        nestedContext: QueryASTContext<Cypher.Node>;
        selection: SelectionClause;
    };
}
//# sourceMappingURL=VectorSelection.d.ts.map