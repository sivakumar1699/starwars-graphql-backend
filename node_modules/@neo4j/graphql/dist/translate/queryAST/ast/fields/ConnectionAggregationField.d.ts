import Cypher from "@neo4j/cypher-builder";
import { QueryASTContext } from "../QueryASTContext";
import type { QueryASTNode } from "../QueryASTNode";
import type { AggregationOperation } from "../operations/AggregationOperation";
import type { CompositeAggregationOperation } from "../operations/composite/CompositeAggregationOperation";
import { Field } from "./Field";
/** An aggregate field inside connection */
export declare class ConnectionAggregationField extends Field {
    operation: AggregationOperation | CompositeAggregationOperation;
    private nodeAlias;
    private projectionExpr;
    constructor({ operation, alias, nodeAlias, }: {
        operation: AggregationOperation | CompositeAggregationOperation;
        alias: string;
        nodeAlias: string;
    });
    getChildren(): QueryASTNode[];
    getProjectionField(): Record<string, Cypher.Expr>;
    getSubqueries(context: QueryASTContext): Cypher.Clause[];
}
//# sourceMappingURL=ConnectionAggregationField.d.ts.map