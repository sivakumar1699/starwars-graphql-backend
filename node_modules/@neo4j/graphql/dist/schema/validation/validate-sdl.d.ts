import type { Maybe } from "@graphql-tools/utils";
import type { ASTVisitor, DocumentNode, GraphQLError, GraphQLSchema } from "graphql";
import type { SDLValidationContext } from "graphql/validation/ValidationContext";
import type { Neo4jGraphQLCallbacks } from "../../types";
type Neo4jValidationRule = <T extends SDLValidationContext>(context: T) => ASTVisitor;
export declare function validateSDL(documentAST: DocumentNode, rules: ReadonlyArray<Neo4jValidationRule>, schemaToExtend?: Maybe<GraphQLSchema>, callbacks?: Neo4jGraphQLCallbacks): ReadonlyArray<GraphQLError>;
export {};
//# sourceMappingURL=validate-sdl.d.ts.map