import type { ArgumentNode, EnumTypeDefinitionNode, FieldDefinitionNode, GraphQLArgument, TypeNode, ValueNode } from "graphql";
import * as neo4j from "neo4j-driver";
import type { AssertionResponse } from "./document-validation-error";
export declare function getInnerTypeName(typeNode: TypeNode): string;
export declare function fromValueKind(valueNode: ValueNode, enums: EnumTypeDefinitionNode[], expectedType: string): string | undefined;
export declare function getPrettyName(typeNode: TypeNode): string;
export declare function parseArgumentToInt(arg: ArgumentNode | undefined): neo4j.Integer | undefined;
export declare function isArrayType(traversedDef: FieldDefinitionNode): boolean;
export declare function findArgumentDefinitionNodeByName(args: readonly GraphQLArgument[], name: string): GraphQLArgument | undefined;
export declare function assertArgumentType(argumentNode: ArgumentNode, inputValueDefinition: GraphQLArgument): AssertionResponse;
//# sourceMappingURL=utils.d.ts.map