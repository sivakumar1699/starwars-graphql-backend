import { type InterfaceTypeDefinitionNode, type ObjectTypeDefinitionNode, type UnionTypeDefinitionNode } from "graphql";
import type { TypeMapWithExtensions } from "../../../Neo4jValidationContext";
export declare function typeIsANodeType({ objectTypeDefinitionNode, typeMapWithExtensions, }: {
    objectTypeDefinitionNode: ObjectTypeDefinitionNode;
    typeMapWithExtensions: TypeMapWithExtensions;
}): boolean;
export declare function interfaceIsNode({ interfaceTypeDefinitionNode, typeMapWithExtensions, interfacesMap, }: {
    interfaceTypeDefinitionNode: InterfaceTypeDefinitionNode;
    typeMapWithExtensions: TypeMapWithExtensions;
    interfacesMap: Record<string, Array<ObjectTypeDefinitionNode>>;
}): boolean;
export declare function unionIsNode({ unionTypeDefinitionNode, typeMapWithExtensions, }: {
    unionTypeDefinitionNode: UnionTypeDefinitionNode;
    typeMapWithExtensions: TypeMapWithExtensions;
}): boolean;
//# sourceMappingURL=is-node-type.d.ts.map