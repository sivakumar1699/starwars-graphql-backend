"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.relationshipTargetHasRelationshipWithNestedOperation = relationshipTargetHasRelationshipWithNestedOperation;
exports.shouldAddDeprecatedFields = shouldAddDeprecatedFields;
const ConcreteEntityAdapter_1 = require("../../schema-model/entity/model-adapters/ConcreteEntityAdapter");
function relationshipTargetHasRelationshipWithNestedOperation(target, nestedOperation) {
    if (target instanceof ConcreteEntityAdapter_1.ConcreteEntityAdapter) {
        return Array.from(target.relationships.values()).some((rel) => rel.nestedOperations.has(nestedOperation));
    }
    return Array.from(target.relationshipDeclarations.values()).some((rel) => rel.nestedOperations.has(nestedOperation));
}
/** Returns true if the "excludeDeprecatedFields" flag is not set in the features option of Neo4jGraphQL for the chosen deprecation type */
function shouldAddDeprecatedFields(features, deprecation) {
    return !features?.excludeDeprecatedFields?.[deprecation];
}
//# sourceMappingURL=utils.js.map