"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAggregationFilterFromAttributeType = getAggregationFilterFromAttributeType;
const BigIntScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/BigIntScalarAggregationFilters");
const DateTimeScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/DateTimeScalarAggregationFilters");
const DurationScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/DurationScalarAggregationFilters");
const FloatScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/FloatScalarAggregationFilters");
const IntScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/IntScalarAggregationFilters");
const LocalDateTimeScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/LocalDateTimeScalarAggregationFilters");
const LocalTimeScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/LocalTimeScalarAggregationFilters");
const StringScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/StringScalarAggregationFilters");
const TimeScalarAggregationFilters_1 = require("../../graphql/input-objects/generic-aggregation-filters/TimeScalarAggregationFilters");
function getAggregationFilterFromAttributeType(attribute) {
    if (attribute.typeHelper.isList()) {
        throw new Error("List types not available for aggregations");
    }
    if (attribute.typeHelper.isString()) {
        return StringScalarAggregationFilters_1.StringScalarAggregationFilters;
    }
    if (attribute.typeHelper.isInt()) {
        return IntScalarAggregationFilters_1.IntScalarAggregationFilters;
    }
    if (attribute.typeHelper.isFloat()) {
        return FloatScalarAggregationFilters_1.FloatScalarAggregationFilters;
    }
    if (attribute.typeHelper.isBigInt()) {
        return BigIntScalarAggregationFilters_1.BigIntScalarAggregationFilters;
    }
    if (attribute.typeHelper.isTime()) {
        return TimeScalarAggregationFilters_1.TimeScalarAggregationFilters;
    }
    if (attribute.typeHelper.isDateTime()) {
        return DateTimeScalarAggregationFilters_1.DateTimeScalarAggregationFilters;
    }
    if (attribute.typeHelper.isLocalTime()) {
        return LocalTimeScalarAggregationFilters_1.LocalTimeScalarAggregationFilters;
    }
    if (attribute.typeHelper.isLocalDateTime()) {
        return LocalDateTimeScalarAggregationFilters_1.LocalDateTimeScalarAggregationFilters;
    }
    if (attribute.typeHelper.isDuration()) {
        return DurationScalarAggregationFilters_1.DurationScalarAggregationFilters;
    }
    throw new Error(`No scalar filter found for attribute ${attribute.type.name}`);
}
//# sourceMappingURL=get-aggregation-filter-from-attribute-type.js.map