"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withInterfaceType = withInterfaceType;
const to_compose_1 = require("../to-compose");
function withInterfaceType({ interfaceEntityAdapter, userDefinedFieldDirectives, userDefinedInterfaceDirectives, composer, }) {
    // TODO: maybe create interfaceEntity.interfaceFields() method abstraction even if it retrieves all attributes?
    // can also take includeRelationships as argument
    const objectComposeFields = (0, to_compose_1.attributeAdapterToComposeFields)(Array.from(interfaceEntityAdapter.attributes.values()), userDefinedFieldDirectives);
    const interfaceTypeName = interfaceEntityAdapter.name;
    return composer.createInterfaceTC({
        name: interfaceTypeName,
        fields: objectComposeFields,
        directives: (0, to_compose_1.graphqlDirectivesToCompose)(userDefinedInterfaceDirectives),
    });
}
//# sourceMappingURL=interface-type.js.map