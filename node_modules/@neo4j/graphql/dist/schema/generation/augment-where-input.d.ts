import type { Directive, InputTypeComposer, InputTypeComposerFieldConfigMapDefinition, SchemaComposer } from "graphql-compose";
import type { RelationshipAdapter } from "../../schema-model/relationship/model-adapters/RelationshipAdapter";
import type { RelationshipDeclarationAdapter } from "../../schema-model/relationship/model-adapters/RelationshipDeclarationAdapter";
import type { Neo4jFeaturesSettings } from "../../types";
type FieldConfig = {
    name: string;
    typeName: string;
    description: string;
    deprecationReason?: string;
};
export declare function augmentWhereInputWithRelationshipFilters({ whereInput, composer, relationshipAdapter, deprecatedDirectives, features, }: {
    whereInput: InputTypeComposer;
    composer: SchemaComposer;
    relationshipAdapter: RelationshipAdapter | RelationshipDeclarationAdapter;
    deprecatedDirectives: Directive[];
    features?: Neo4jFeaturesSettings;
}): {} | undefined;
export declare function getRelationshipFilters({ relationshipInfo, relationshipAdapter, }: {
    relationshipInfo?: {
        targetName: string;
        inputTypeName: string;
    };
    relationshipAdapter?: RelationshipAdapter | RelationshipDeclarationAdapter;
}): FieldConfig[];
export declare function fieldConfigsToFieldConfigMap({ deprecatedDirectives, fields, }: {
    deprecatedDirectives: Directive[];
    fields: FieldConfig[];
}): InputTypeComposerFieldConfigMapDefinition;
export {};
//# sourceMappingURL=augment-where-input.d.ts.map