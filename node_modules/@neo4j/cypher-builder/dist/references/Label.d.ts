import type { Expr } from "..";
import { CypherASTNode } from "../CypherASTNode";
import type { CypherEnvironment } from "../Environment";
import type { NodeRef } from "../references/NodeRef";
/** Represents a label attached to a {@link NodeRef | Node}
 * @group Variables
 * @example
 *
 * ```js
 * movies.label("Movie")
 * ```
 *
 * _Cypher:_
 * ```cypher
 * this0:Movie
 * ```
 */
export declare class Label extends CypherASTNode {
    protected readonly node: NodeRef;
    private readonly label;
    /**
     * @internal
     */
    constructor(node: NodeRef, label: string);
    /** @internal */
    getCypher(env: CypherEnvironment): string;
    private generateLabelExpressionStr;
}
export declare class DynamicLabel extends Label {
    private readonly expr;
    /**
     * @internal
     */
    constructor(node: NodeRef, expr: Expr);
    /** @internal */
    getCypher(env: CypherEnvironment): string;
}
