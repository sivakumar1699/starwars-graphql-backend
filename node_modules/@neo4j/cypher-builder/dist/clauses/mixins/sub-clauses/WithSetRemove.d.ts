import type { Label } from "../../..";
import type { CypherEnvironment } from "../../../Environment";
import type { PropertyRef } from "../../../references/PropertyRef";
import type { SetParam } from "../../sub-clauses/Set";
import { Mixin } from "../Mixin";
export declare abstract class WithSetRemove extends Mixin {
    private subClauses;
    /** Append a `SET` clause. Allowing to assign variable properties to values.
     * @see {@link https://neo4j.com/docs/cypher-manual/current/clauses/set/ | Cypher Documentation}
     */
    set(...params: SetParam[]): this;
    /** Append a `REMOVE` clause.
     * @see {@link https://neo4j.com/docs/cypher-manual/current/clauses/remove/ | Cypher Documentation}
     */
    remove(...properties: Array<PropertyRef | Label>): this;
    protected compileSetCypher(env: CypherEnvironment): string;
    private get lastSubClause();
}
