import { CypherASTNode } from "../../CypherASTNode";
import type { CypherEnvironment } from "../../Environment";
import type { Param } from "../../references/Param";
import type { PropertyRef } from "../../references/PropertyRef";
import type { Variable } from "../../references/Variable";
import type { Call } from "../Call";
export type SetParam = [PropertyRef, Param<unknown>];
/** Represents a WITH statement to import variables into a CALL subquery */
export declare class ImportWith extends CypherASTNode {
    private readonly params;
    private hasStar;
    constructor(parent: Call, params: Array<"*" | Variable>);
    /** @internal */
    getCypher(env: CypherEnvironment): string;
    private filterParams;
}
