import type { Expr, Literal, Variable } from "..";
import type { CypherEnvironment } from "../Environment";
import { Clause } from "./Clause";
import { WithCreate } from "./mixins/clauses/WithCreate";
import { WithMatch } from "./mixins/clauses/WithMatch";
import { WithMerge } from "./mixins/clauses/WithMerge";
import { WithReturn } from "./mixins/clauses/WithReturn";
import { WithWith } from "./mixins/clauses/WithWith";
import { WithDelete } from "./mixins/sub-clauses/WithDelete";
import { WithOrder } from "./mixins/sub-clauses/WithOrder";
import { WithSetRemove } from "./mixins/sub-clauses/WithSetRemove";
export interface Unwind extends WithWith, WithDelete, WithMatch, WithReturn, WithSetRemove, WithCreate, WithMerge, WithOrder {
}
/** @group Clauses */
export type UnwindProjectionColumn = [Expr, string | Variable | Literal];
/**
 * @see {@link https://neo4j.com/docs/cypher-manual/current/clauses/unwind/ | Cypher Documentation}
 * @group Clauses
 */
export declare class Unwind extends Clause {
    private readonly projection;
    constructor(projection: UnwindProjectionColumn);
    /** Append an {@link Unwind} clause.
     * @see {@link https://neo4j.com/docs/cypher-manual/current/clauses/unwind/ | Cypher Documentation}
     */
    unwind(clause: Unwind): Unwind;
    unwind(projection: UnwindProjectionColumn): Unwind;
    /** @internal */
    getCypher(env: CypherEnvironment): string;
}
