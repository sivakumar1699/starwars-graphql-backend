"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.current = current;
exports.earliest = earliest;
exports.query = query;
const CypherProcedure_1 = require("../../procedures/CypherProcedure");
const normalize_variable_1 = require("../../utils/normalize-variable");
const CDC_NAMESPACE = "db.cdc";
/** Acquire a change identifier for the last committed transaction
 * @see [Neo4j Documentation](https://neo4j.com/docs/cdc/current/procedures/current/)
 * @group Procedures
 */
function current() {
    return new CypherProcedure_1.CypherProcedure("current", [], CDC_NAMESPACE);
}
/** Acquire a change identifier for the earliest available change
 * @see [Neo4j Documentation](https://neo4j.com/docs/cdc/current/procedures/earliest/)
 * @group Procedures
 */
function earliest() {
    return new CypherProcedure_1.CypherProcedure("earliest", [], CDC_NAMESPACE);
}
/** Query the database for captured changes
 * @see [Neo4j Documentation](https://neo4j.com/docs/cdc/current/procedures/query/)
 * @group Procedures
 */
function query(from, selectors = []) {
    const fromExpr = (0, normalize_variable_1.normalizeExpr)(from);
    const selectorsExpr = (0, normalize_variable_1.normalizeList)(selectors);
    return new CypherProcedure_1.CypherProcedure("query", [fromExpr, selectorsExpr], CDC_NAMESPACE);
}
