import type { InputArgument } from "../../../procedures/CypherProcedure";
import { CypherProcedure, VoidCypherProcedure } from "../../../procedures/CypherProcedure";
import type { Literal } from "../../../references/Literal";
import type { Param } from "../../../references/Param";
import type { Variable } from "../../../references/Variable";
/**
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/current/reference/procedures/#procedure_db_index_fulltext_querynodes)
 * @group Procedures
 */
export declare function queryNodes(indexName: string | Literal<string>, queryString: string | Literal<string> | Param | Variable, options?: {
    skip?: InputArgument<number>;
    limit?: InputArgument<number>;
    analyser?: InputArgument<string>;
}): CypherProcedure<"node" | "score">;
/**
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/current/reference/procedures/#procedure_db_index_fulltext_queryrelationships)
 * @group Procedures
 */
export declare function queryRelationships(indexName: string | Literal<string>, queryString: string | Literal<string> | Param | Variable, options?: {
    skip?: InputArgument<number>;
    limit?: InputArgument<number>;
    analyser?: InputArgument<string>;
}): CypherProcedure<"relationship" | "score">;
/**
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/current/reference/procedures/#procedure_db_index_fulltext_awaiteventuallyconsistentindexrefresh)
 * @group Procedures
 */
export declare function awaitEventuallyConsistentIndexRefresh(): VoidCypherProcedure;
/**
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/current/reference/procedures/#procedure_db_index_fulltext_listavailableanalyzers)
 * @group Procedures
 */
export declare function listAvailableAnalyzers(): CypherProcedure<"analyzer" | "description" | "stopwords">;
